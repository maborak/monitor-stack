version: "3"

services:
  traefik:
    image: traefik:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./conf/acme.json:/acme.json
      - ./logs/traefik/system.log:/system.log
      - ./logs/traefik/access.log:/access.log
    ports:
      - "${BIND_IP:-0.0.0.0}:80:80"
      - "${BIND_IP:-0.0.0.0}:443:443"
    command:
      - "--log.level=DEBUG"
      - "--log.filePath=system.log"
      - "--accesslog=true"
      - "--accesslog.filepath=access.log"
      - "--accesslog.bufferingsize=100"
      - "--accesslog.format=json"
      - "--accesslog.fields.defaultmode=keep"
      - "--accesslog.fields.names.ClientUsername=drop"
      - "--accesslog.fields.headers.defaultmode=drop"
      - "--accesslog.fields.headers.names.User-Agent=redact"
      - "--accesslog.fields.headers.names.Authorization=drop"
      - "--accesslog.fields.headers.names.Content-Type=keep"
      - "--api=true"
      - "--api.dashboard=true"
      - "--ping=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.constraints=Label(`traefik.server`,`${CONTEXT:-prometheus}`)"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.le.acme.email=maborak@gmail.com"
      - "--certificatesResolvers.le.acme.storage=acme.json"
      - "--certificatesResolvers.le.acme.tlsChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge=true"
      - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
      - "--certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--entrypoints.traefik.address=:8090" #change dashboard api port internally
    labels:
      - "traefik.server=${CONTEXT:-prometheus}"
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.entryPoints=web"
      #- "traefik.http.routers.dashboard.tls=true"
      #- "traefik.http.routers.dashboard.tls.certresolver=le"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.dashboard.rule=Host(`${DOMAIN_ROUTER:-router.prometheus.local}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8090"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=maborak:$$apr1$$luvsw9qm$$rAuZFNPtah4SY6YkGAUMR/" #todos los signos dolar deben ser doble

  prometheus:
    image: prom/prometheus
    labels:
      - "traefik.server=${CONTEXT:-prometheus}"
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus_https.rule=Host(`${DOMAIN_PROMETHEUS:-prometheus.local}`)"
      - "traefik.http.routers.prometheus_https.entrypoints=websecure"
      - "traefik.http.routers.prometheus_https.tls=true"
      - "traefik.http.routers.prometheus_https.tls.certresolver=le"
      - "traefik.http.routers.iem_http.rule=Host(`${DOMAIN_PROMETHEUS:-prometheus.local}`)"
      - "traefik.http.routers.iem_http.entrypoints=web"
      - "traefik.http.services.iem_http.loadbalancer.server.port=9090"
      - "traefik.http.routers.iem_http.middlewares=api_headers"
      - "traefik.http.routers.prometheus_https.middlewares=api_headers"
      - "traefik.http.middlewares.api_headers.headers.customresponseheaders.server=iem"
      # - "traefik.http.middlewares.api_headers.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.api_headers.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.api_headers.headers.addvaryheader=true"
    #ports:
    #  - 9990:9090
    volumes:
      #- ./build/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
      - /home/maborak/code/vagrant/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    #command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  grafana:
    build:
      context: ./build/grafana
    labels:
      - "traefik.server=${CONTEXT:-prometheus}"
      - "traefik.enable=true"
      - "traefik.http.routers.grafana_https.rule=Host(`${DOMAIN_GRAFANA:-grafana.local}`)"
      - "traefik.http.routers.grafana_https.entrypoints=websecure"
      - "traefik.http.routers.grafana_https.tls=true"
      - "traefik.http.routers.grafana_https.tls.certresolver=le"
      - "traefik.http.routers.grafana_http.rule=Host(`${DOMAIN_GRAFANA:-grafana.local}`)"
      - "traefik.http.routers.grafana_http.entrypoints=web"
      - "traefik.http.services.grafana_http.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana_http.middlewares=api_headers"
      - "traefik.http.routers.grafana_https.middlewares=api_headers"
      - "traefik.http.middlewares.api_headers.headers.customresponseheaders.server=iem"
      # - "traefik.http.middlewares.api_headers.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.api_headers.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.api_headers.headers.addvaryheader=true"
    volumes:
      - /home/maborak/build/grafana-dashboards/dashboards:/etc/grafana/mysql_dashboards
    #ports:
    #  - "4000:3000"
    environment:
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${GF_SMTP_HOST:-localhost}
      - GF_SMTP_USER=${GF_SMTP_USER:-localhost}
      - GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD:-localhost}
      - GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-none@localhost.com}
      - GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-localhost}
  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - 8081

volumes:
  prometheus-data:
  grafana-data:
